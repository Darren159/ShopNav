// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Directory renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "flex": 0.15,
        "flexDirection": "row",
        "justifyContent": "center",
        "zIndex": 1,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flex": 0.85,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderRadius": 10,
            "borderWidth": 1,
            "flexDirection": "row",
            "paddingLeft": 5,
            "width": "100%",
            "zIndex": 5,
          }
        }
      >
        <Text />
        <TextInput
          onChangeText={[Function]}
          placeholder="Enter starting point"
          style={
            {
              "flex": 1,
              "paddingLeft": 5,
              "paddingVertical": 5,
            }
          }
          value=""
        />
      </View>
      <Text />
      <View
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#fff",
            "borderRadius": 10,
            "borderWidth": 1,
            "flexDirection": "row",
            "paddingLeft": 5,
            "width": "100%",
            "zIndex": 5,
          }
        }
      >
        <Text />
        <TextInput
          onChangeText={[Function]}
          placeholder="Enter destination"
          style={
            {
              "flex": 1,
              "paddingLeft": 5,
              "paddingVertical": 5,
            }
          }
          value=""
        />
      </View>
    </View>
    <View
      style={
        {
          "width": 75,
        }
      }
    >
      <Text
        style={
          {
            "textAlign": "center",
          }
        }
      >
        Elevators Only
      </Text>
      <RCTSwitch
        accessibilityRole="switch"
        onChange={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onTintColor="#81b0ff"
        style={
          {
            "height": 31,
            "width": 51,
          }
        }
        thumbTintColor="#f4f3f4"
        tintColor="#767577"
        value={false}
      />
      <View
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          [
            {
              "overflow": "hidden",
            },
            {
              "backgroundColor": "#515151",
              "borderRadius": 13,
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "flex-start",
                "padding": 8,
              },
              {
                "backgroundColor": "#515151",
                "borderRadius": 13,
              },
              undefined,
            ]
          }
        >
          <Text />
          <Text
            selectable={false}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "fontWeight": "600",
                },
                {
                  "color": "white",
                },
              ]
            }
          >
            Go!
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "flex": 0.85,
      }
    }
  >
    <View
      animatedStyle={
        {
          "value": {
            "transform": [
              {
                "translateX": 0,
              },
              {
                "translateY": 0,
              },
              {
                "scale": 1,
              },
            ],
          },
        }
      }
      collapsable={false}
      style={
        {
          "transform": [
            {
              "translateX": 0,
            },
            {
              "translateY": 0,
            },
            {
              "scale": 1,
            },
          ],
        }
      }
    >
      <RNSVGSvgView
        align="xMidYMid"
        bbHeight="100%"
        bbWidth="100%"
        focusable={false}
        height="100%"
        meetOrSlice={0}
        minX={0}
        minY={0}
        style={
          [
            {
              "backgroundColor": "transparent",
              "borderWidth": 0,
            },
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "flex": 0,
              "height": "100%",
              "width": "100%",
            },
          ]
        }
        vbHeight={760}
        vbWidth={600}
        width="100%"
      >
        <RNSVGGroup
          fill={
            {
              "payload": 4278190080,
              "type": 0,
            }
          }
        />
      </RNSVGSvgView>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "bottom": 20,
        "flexDirection": "column-reverse",
        "justifyContent": "space-between",
        "position": "absolute",
        "right": 20,
      }
    }
  />
</RNCSafeAreaView>
`;
