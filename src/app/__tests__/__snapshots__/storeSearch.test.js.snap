// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StoreSearch renders correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "flex": 1,
      "marginHorizontal": 20,
    }
  }
>
  <View
    style={
      {
        "marginTop": 10,
      }
    }
  >
    <View>
      <TextInput
        autoCapitalize="none"
        autoCorrect={false}
        clearButtonMode="always"
        onChangeText={[Function]}
        placeholder="Search..."
        style={
          {
            "borderColor": "grey",
            "borderRadius": 10,
            "borderWidth": 1,
            "height": 40,
            "marginBottom": 5,
            "paddingLeft": 10,
          }
        }
        value=""
      />
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#ECEEF0",
            "borderRadius": 10,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 40,
            "opacity": 1,
            "paddingLeft": 10,
            "paddingRight": 10,
          }
        }
      >
        <Text>
          Select a Category
        </Text>
        <Text />
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 0,
          }
        }
      >
        <Text />
      </View>
      <Modal
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      />
    </View>
  </View>
  <RCTScrollView
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View />
  </RCTScrollView>
</RCTSafeAreaView>
`;
